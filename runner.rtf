{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue230;\red0\green0\blue0;\red0\green102\blue0;
\red128\green0\blue128;\red128\green0\blue0;}
\deftab560
\pard\pardeftab560\ql\qnatural

\f0\fs24 \cf2 Messages\cf3  from external clients that should be processed by \cf2 OSCresponders\cf3  must be sent to the language port, 
\b \cf2 57120
\b0 \cf2  \cf3 by default. \cf2 Use\cf3  
\b \cf2 NetAddr\cf3 .langPort
\b0  to confirm which port the \cf2 SuperCollider\cf3  language is listening on.\
\

\f1\fs28 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf4 // run this line first\cf3 \
~parrots = \cf2 Parrots\cf3 .new(\cf2 Server\cf3 .local);\
~atqs = \cf2 Atqs\cf3 .new(\cf2 Server\cf3 .local);\
\cf4 // again wait for the completion message \cf3 \
\
\cf4 // finally run the following code block:\cf3 \
\
(\
\cf2 var\cf3  movement = \cf2 -1\cf3 ;\
\cf2 var\cf3  movementInfo = 
\fs44 [\cf2 1\cf3 ,\cf2 3\cf3 ,\cf2 2\cf3 ,\cf2 1\cf3 ,\cf2 7\cf3 ,\cf2 5\cf3 ];
\fs28 \
\cf4 // run them both\cf3 \
\cf4 // i think that in running parrots we need to set an output bus (or pair, really!)\cf3 \
\cf4 // this allows us to have the out as 0 in the def , thus allowing standalone running\cf3 \
\cf4 // and then when running in the ocntext of desert qe can defone a bus here, somehow\cf3 \
~parrots.run(\cf2 32\cf3 );\
~atqs.run;\
\cf4 // but stop the atqs player\cf3 \
~atqs.stopPlayer;\
\cf4 // and set the active flag to parrots\cf3 \
~active  = \cf5 "parrots"\cf3 ;\
\
\cf4 // now add a single LeaWii responder on "+"\cf3 \
~runnerWii = \cf2 LeaWii\cf3 .new(\cf2 2\cf3 );\
\cf4 // ***************************************************************\cf3 \
~runnerWii.add(\cf5 "+"\cf3 , \{\cf2 |t,r,msg|\cf3 \
if (msg[\cf2 1\cf3 ]==\cf2 1\cf3 , \{\
	movement = movement + \cf2 1\cf3 ;\
	\cf4 // first increment the movement counter\cf3 \
	if (~active  == \cf5 "parrots"\cf3 , \{\
			~active  = \cf5 "atqs"\cf3 ;\
			~parrots.stopPlayer;\
			~parrots.leaWii.clear; \
			~atqs.atqsWii.renew;\
			\cf4 // load the preset appropriate to this movement\cf3 \
			\cf4 // and amke sure that the thing is playing\cf3 \
			\cf5 "______________"\cf3 .postln;\
			~atqs.startPlayer;\
			\cf5 "before defer"\cf3 .postln;\
			\{	~atqs.selectPreset.value = movementInfo[movement];\
				~atqs.applyPresets(movementInfo[movement]);\
				\cf5 "in defer"\cf3 .postln\}.defer;\
			\cf5 "after defer"\cf3 .postln;\
			\cf5 "movement is"\cf3 .postln;\
			movement.postln;\
			movementInfo[movement].postln;\
			~runnerWii.renew;\
	\},\
	\{		\
			~active = \cf5 "parrots"\cf3 ;\
			\cf4 // make sure synths are off\cf3 \
			~atqs.mySynth[\cf2 0\cf3 ].set(\cf6 \\gate\cf3 , \cf2 0\cf3 );\
			~atqs.mySynth[\cf2 1\cf3 ].set(\cf6 \\gate\cf3 , \cf2 0\cf3 );\
			~atqs.myMixer.set(\cf6 \\gate\cf3 , \cf2 0\cf3 );\
			~atqs.atqsWii.clear; \cf4 // clear out atqs resonders\cf3 \
			~parrots.leaWii.renew;\
			~runnerWii.renew;			\
			\cf4 // give the fade out chance to happen\cf3 \
			\cf2 SystemClock\cf3 .sched(\cf2 1\cf3 , \{\
				~atqs.stopPlayer; \cf4 // stop atqs synth\cf3 \
				~atqs.myMixer.set(\cf6 \\gate\cf3 , \cf2 1\cf3 ); \cf4 // get mixer levels back up\cf3 \
				~parrots.startPlayer;\
			\});\
			\cf5 "movement is"\cf3 .postln;\
			movement.postln;\
			movementInfo[movement].postln;\
			\{~parrots.selectPreset.value = movementInfo[movement];\
				~parrots.applyPresets(movementInfo[movement]);\}.defer;\
	\}); \cf4 // end if\cf3 \
	\cf5 "movement is now"\cf3 .post;\
	movement.postln;\
\}); \cf4 // end msg if\cf3 \
\});\
\
)\
}